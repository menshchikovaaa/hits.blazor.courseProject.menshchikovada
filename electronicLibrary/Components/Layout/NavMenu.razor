@using Microsoft.AspNetCore.Identity
@rendermode InteractiveServer
@implements IDisposable
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject SignInManager<ApplicationUser> SignInManager
@inject AuthenticationStateProvider AuthProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">electronicLibrary</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <!-- Основные пункты меню -->
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/books" Match="NavLinkMatch.All">
                        <span class="bi bi-book" aria-hidden="true"></span> Книги
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/authors">
                        <span class="bi bi-person-badge" aria-hidden="true"></span> Авторы
                    </NavLink>
                </div>

                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/genres">
                        <span class="bi bi-list-ul" aria-hidden="true"></span> Жанры
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <!-- Пункты меню для администраторов -->
        <AuthorizeView Roles="Admin">
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/admin/users">
                        <span class="bi bi-people" aria-hidden="true"></span> Пользователи
                    </NavLink>
                </div>
            </Authorized>
        </AuthorizeView>

        <!-- Управление аккаунтом -->
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/account">
                        <span class="bi bi-person-circle" aria-hidden="true"></span> Профиль
                    </NavLink>
                </div>
                    <div class="nav-item px-3">
                        <button @onclick="NavigateToLogout" class="nav-link btn btn-link">
                            <span class="bi bi-box-arrow-right"></span> Выйти
                        </button>
                    </div>
            </Authorized>
            <NotAuthorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/account/register">
                        <span class="bi bi-person-plus" aria-hidden="true"></span> Регистрация
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/account/login">
                        <span class="bi bi-box-arrow-in-right" aria-hidden="true"></span> Вход
                    </NavLink>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override async Task OnInitializedAsync()
    {
        AuthProvider.AuthenticationStateChanged += UpdateState;
    }

    private async void UpdateState(Task<AuthenticationState> task)
    {
        await InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        AuthProvider.AuthenticationStateChanged -= UpdateState;
    }


    private void NavigateToLogout()
    {
        Navigation.NavigateTo("/logout", forceLoad: true);
    }
}