@inject IBookLoanService LoanService

@if (loans == null)
{
    <p>Загрузка...</p>
}
else if (!loans.Any())
{
    <p>Нет активных займов</p>
}
else
{
    <table class="table table-sm">
        <thead>
            <tr>
                <th>Книга</th>
                <th>Читатель</th>
                <th>Дата выдачи</th>
                <th>Срок возврата</th>
                <th>Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var loan in loans)
            {
                <tr>
                    <td>@loan.Book.Title</td>
                    <td>@loan.User.FullName</td>
                    <td>@loan.LoanDate.ToShortDateString()</td>
                    <td>@loan.DueDate.ToShortDateString()</td>
                    <td>
                        <button @onclick="() => ReturnBook(loan.Id)"
                                class="btn btn-sm btn-primary">
                            Вернуть
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BookLoan> loans = new();

    protected override async Task OnInitializedAsync()
    {
        loans = await LoanService.GetActiveLoansAsync();
    }

    private async Task ReturnBook(int loanId)
    {
        await LoanService.ReturnBookAsync(loanId);
        loans = await LoanService.GetActiveLoansAsync();
    }
}