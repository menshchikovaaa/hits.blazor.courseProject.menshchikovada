@page "/authors/{id:int}"
@attribute [Authorize]
@rendermode InteractiveServer
@inject IAuthorService AuthorService
@inject NavigationManager Navigation

<PageTitle>@author?.FullName</PageTitle>

@if (author == null)
{
    <p>Загрузка...</p>
}
else
{
    <div class="card">
        <div class="card-header">
            <h3>@author.FullName</h3>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <h5>Биография:</h5>
                    <p>@(author.Biography ?? "Биография не указана")</p>
                </div>
                <div class="col-md-6">
                    <h5>Книги автора:</h5>
                    @if (author.BookAuthors?.Any() == true)
                    {
                        <ul>
                            @foreach (var bookAuthor in author.BookAuthors)
                            {
                                <li>@bookAuthor.Book.Title</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>Нет книг</p>
                    }
                </div>
            </div>
        </div>
        <div class="card-footer">
            <button @onclick="BackToList" class="btn btn-secondary">Назад</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Author? author;

    protected override async Task OnInitializedAsync()
    {
        author = await AuthorService.GetAuthorByIdAsync(Id);
    }

    private void BackToList()
    {
        Navigation.NavigateTo("/authors");
    }
}